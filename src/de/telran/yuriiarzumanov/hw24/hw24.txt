Что такое Pattern и Mathcer?
Pattern и Matcher - это два класса, связанных с регулярными выражениями (regular expressions).
Pattern - класс,представляющий компилированное регулярное выражение.используется для предварительной компиляции
и оптимизации регулярных выражений.позволяет создавать экземпляры регулярных выражений,которые затем можно использовать
для поиска и сопоставления строк с заданными шаблонами.
Matcher - это класс, предназначенный для выполнения операций поиска и сопоставления строк с регулярными выражениями,
предварительно скомпилированными с использованием класса Pattern.позволяет выполнить различные операции, такие как поиск
совпадений, извлечение групп захвата и другие манипуляции с текстом, с использованием регулярных выражений.

Как работает алгоритм поиска в Matcher жадно или лениво? Как можно добиться ленивого поиска?
Алгоритм поиска в Matcher по умолчанию является жадным.он попытается найти наибольшее возможное совпадение,
удовлетворяющее заданному регулярному выражению.можем добиться ленивого поиска с использованием квантификаторов ? или *?
Квантификаторы ? и *? делают соответствующие символы или группы ленивыми,они будут искать наименьшее возможное
совпадение, вместо наибольшего.
*? - ленивый квантификатор для сопоставления нуля или более повторений предыдущего элемента.
?? - ленивый квантификатор для сопоставления нуля или одного повторения предыдущего элемента.

Что содержит в себе PatternSyntaxException?
PatternSyntaxException - это исключение, которое выбрасывается при обнаружении синтаксической ошибки в регулярном
выражении, когда оно компилируется с использованием класса Pattern.полезно для обработки синтаксических ошибок в
регулярных выражениях во время выполнения программы, позволяя программе обработать ошибку и предпринять действия.
Сообщение об ошибке: Описывает причину ошибки синтаксиса в регулярном выражении.
Регулярное выражение: Содержит само регулярное выражение, в котором обнаружена ошибка.
Позиция ошибки: Указывает на позицию, где была обнаружена ошибка в регулярном выражении.

Что означает . в регулярных выражениях? как сделать поиск по символу .?
В регулярных выражениях символ '.' (точка) означает сопоставление с любым символом, кроме символа новой строки (\n).
Он представляет собой шаблон, который соответствует любому одиночному символу в строке, кроме перевода строки.
выполнить поиск по символу точки (самому символу '.'), вам нужно экранировать его с помощью обратной косой черты '\.'

Как сделать поиск по \? когда применяется экранирование?
Для поиска по символу \? (обратный слеш и знак вопроса) в регулярных выражениях,должны экранировать как обратный
слеш, так и знак вопроса. Это делается с помощью двойного экранирования: '\\?'

За что отвечают символы *, +, ? {3,5}
Символы *, + и ? являются квантификаторами в регулярных выражениях и управляют количеством вхождений предыдущего
элемента.(звездочка):означает, что предыдущий элемент может появиться ноль или более раз.(плюс):означает, что предыдущий
элемент должен появиться один или более раз.(вопросительный знак):означает, что предыдущий элемент может появиться
ноль или один раз.

Как исключить из поиска определенные символы?
Для исключения определенных символов из поиска в регулярных выражениях,использовать отрицательные символьные
классы с помощью '[^...]' '[^...]'': Символьный класс, начинающийся с '[^ ' и заканчивающийся ']', позволяет исключить
символы, перечисленные внутри скобок.

Как сделать именованную группу? ((A(B))(C)) что тут является группой 1, что группой 3?
(посмотрите документацию Pattern, там есть объяснение похожего примера)

В чем преимущество у StringBuilder vs String?
Преимущество StringBuilder по сравнению с String заключается в эффективности при изменении строк.
StringBuilder-представляет изменяемую строку (mutable string) Эффективно поддерживает конкатенацию и изменение
строк, не создавая новых объектов.Подходит для сборки длинных строк или многократных изменений, так как не создает
лишних объектов в памяти.Подходит для операций, которые изменяют строки часто.
String-представляет неизменяемую строку (immutable string) При каждой операции изменения создается новый объект строки,
что может привести к неэффективному использованию памяти и производительности.Подходит для хранения постоянных (immutable) данных.



------------------------------------------------------------------------------------------------------------------

Считайте файл результаты матчей(из домашней работы 22) загрузите файл в строку(можно построчно считывать),
и найдите в нем все названия команд, которые состоят из двух слов
Напишите программу, которая используя регулярные выражения будет проверять пароль на надежность:
хотя бы 1 символ латинского алфавита в нижнем регистре
хотя бы 1 символ латинского алфавита в верхнем регистре
хотя бы 1 символ числа
хотя бы 1 символ !"#$%&'()*+,-./:;<=>?@[\]^_{|}~
длина не меньше 8 символов
Есть строка Carrot Collapse /\ Criteria, Avatar. Sort][Cabbage, необходимо написать регулярное выражение,
которое будет находить все слова начинающиеся на C и заканчивающийся на t или e
В строке Carrot Collapse /\ Criteria, Avatar. Sort][Cabbage нужно найти позиции небуквенных символов
Есть строка 01111000201010101701. С помощью регулярного выражения проверьте является ли данная строка двиочным
представлением (двичное счисло может содержать только 1 и 0), если есть ошибка верните индексы, где они встретились
