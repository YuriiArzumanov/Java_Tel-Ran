C чем работает InputStream и OutputStream?
InputStream работает с байтовыми данными и предоставляет возможность чтения данных из источников, таких как файлы,
сетевые потоки или другие входные потоки.
OutputStream также работает с байтовыми данными и предоставляет возможность записи данных в целевые места, такие как
файлы, сетевые соединения или другие выходные потоки.

C чем работает Reader и Writer? когда лучше использовать InputStream а когда Reader?
Reader и Writer работают с символьными данными и предоставляют возможность чтения и записи текстовой информации.
Лучше использовать InputStream и OutputStream,с байтовыми данными,при чтении и записи изображений или аудиофайлов.

Какой объект мы можем записать в файл с помощью ObjectOutputStream?
С помощью ObjectOutputStream в Java можно записать в файл объекты, которые реализуют интерфейс Serializable.
Это позволяет сохранить состояние объекта в бинарном формате, чтобы его можно было восстановить позже.

Какое преимущество дает BufferedInputStream/BufferedOutputStream?
BufferedInputStream и BufferedOutputStream предоставляют преимущество в производительности при работе с потоками ввода
и вывода. Они добавляют буферизацию, что позволяет считывать или записывать данные блоками, уменьшая количество операций
ввода/вывода и, таким образом, повышая эффективность. Это особенно полезно при работе с медленными устройствами, такими
как диски, сетевые соединения и другие.

Почему необходимо вызывать метод close()?
Вызов метода close() необходим для корректного завершения работы с потоками ввода и вывода в Java.позволяет освободить
ресурсы, такие как файловые дескрипторы или сетевые соединения, и предотвратить утечку ресурсов. Не вызывание close()
может привести к нежелательным последствиям, таким как незавершенная запись данных в файл или блокирование ресурсов.

Что такое try-with-resource? почему предпочтительно использовать его при работе с ресурсами?


Что делает mark/reset? везде ли он есть?

Можно ли преобразовать InputStream в Reader?

-----------------------------------------------------------------------------------------------------------------------
Напишите метод, который будет считывать с файла строку, подумайте что лучше использовать в этом случае (IS vs Reader)
Напишите метод, который будет записывать строку в файл, подумайте что лучше использовать в этом случае (OS vs Writer)
Напишите небольшую программу, которая будет работать с логикой игры, для этого создайте класс
GameSaveResult(name, winCounter, loseCounter)
Программа в самом начале пытается посмотреть предыдущий результат в файле result.txt
если файла нет, то создает его и создает новый объект GameSaveResult с пустым каунтером и просит пользователя ввести имя с консоли
если файл существует, то считывает GameSaveResult из файла
дальше с помощью рандома генерируется результат isWin:
true - выигрыш
false - проигрыш
увеличивается нужный каунтер и сохраняется в этот же файл
запустите программу несколько раз